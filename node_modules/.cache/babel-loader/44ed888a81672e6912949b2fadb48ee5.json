{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEB CODE LIB\\\\chat-turbo\\\\socket-client\\\\src\\\\components\\\\Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport \"../scss/components/Contact.css\";\nimport Contactcard from \"./Card/Contactcard\";\nimport Photo from \"./Card/Photo\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllChatsAsync } from \"../redux/Slices/ChatSlice\"; //import {timeSince} from \"../utils/changeDate\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const [chats, setChats] = React.useState([]);\n  const socket = useSelector(state => state.socket.socket);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllChatsAsync()).then(res => {\n      setChats(res.payload.data.data.chats);\n    });\n  }, [dispatch]);\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      let temp = chats.find(chat => {\n        chat._id == data.chat;\n      });\n\n      if (temp) {\n        temp.latestMessage.content = data.content;\n        temp.latestMessage.createdAt = data.createdAt;\n        chats.sort(function (a, b) {\n          // Turn your strings into dates, and then subtract them\n          // to get a value that is either negative, positive, or zero.\n          return new timeSince(Date(b.latestMessage.createAt)) - new timeSince(Date(a.latestMessage.createAt));\n        });\n        setChats([...chats]);\n      }\n    });\n  }, [socket]);\n  console.log(chats);\n  const username = useSelector(state => state.auth[0].user.name);\n  const allChats = useSelector(state => state.chats.chats);\n  const allChatsElement = allChats === null || allChats === void 0 ? void 0 : allChats.map(chat => {\n    var _chat$latestMessage, _chat$latestMessage2;\n\n    return /*#__PURE__*/_jsxDEV(Contactcard, {\n      chatId: chat._id,\n      name: username === chat.users[0].name ? chat.users[1].name : chat.users[0].name,\n      latestMessage: (_chat$latestMessage = chat.latestMessage) === null || _chat$latestMessage === void 0 ? void 0 : _chat$latestMessage.content,\n      time: timeSince(new Date((_chat$latestMessage2 = chat.latestMessage) === null || _chat$latestMessage2 === void 0 ? void 0 : _chat$latestMessage2.createdAt)),\n      avatar: username === chat.users[0].name ? chat.users[1].pic : chat.users[0].pic\n    }, chat._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  });\n  const TopFourFriendsElement = allChats === null || allChats === void 0 ? void 0 : allChats.slice(0, 4).map(chat => {\n    return /*#__PURE__*/_jsxDEV(Photo, {\n      photoId: chat._id,\n      src: username === chat.users[0].name ? chat.users[1].pic : chat.users[0].pic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-regular\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Regular Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-avatar\",\n          children: TopFourFriendsElement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-magnifying-glass\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            placeholder: \"Enter a name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-message\",\n      children: allChatsElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact, \"q1JRzuI+bPdlhD7Xxa/hBCMu7z4=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector];\n});\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useEffect","Contactcard","Photo","useDispatch","useSelector","getAllChatsAsync","Contact","chats","setChats","useState","socket","state","dispatch","then","res","payload","data","on","temp","find","chat","_id","latestMessage","content","createdAt","sort","a","b","timeSince","Date","createAt","console","log","username","auth","user","name","allChats","allChatsElement","map","users","pic","TopFourFriendsElement","slice"],"sources":["D:/WEB CODE LIB/chat-turbo/socket-client/src/components/Contact.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"../scss/components/Contact.css\";\r\nimport Contactcard from \"./Card/Contactcard\";\r\nimport Photo from \"./Card/Photo\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllChatsAsync } from \"../redux/Slices/ChatSlice\";\r\n//import {timeSince} from \"../utils/changeDate\";\r\nconst Contact = () => {\r\n  const [chats, setChats] = React.useState([]);\r\n  const socket = useSelector((state) => state.socket.socket);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getAllChatsAsync()).then((res) => {\r\n      setChats(res.payload.data.data.chats);\r\n    });\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    socket.on(\"receive_message\", (data) => {\r\n      let temp = chats.find((chat) => { chat._id == data.chat });\r\n      if (temp) {\r\n        temp.latestMessage.content = data.content;\r\n        temp.latestMessage.createdAt = data.createdAt;\r\n        chats.sort(function (a, b) {\r\n          // Turn your strings into dates, and then subtract them\r\n          // to get a value that is either negative, positive, or zero.\r\n          return (\r\n            new timeSince(Date(b.latestMessage.createAt)) -\r\n            new timeSince(Date(a.latestMessage.createAt))\r\n          );\r\n        });\r\n        setChats([...chats]);\r\n      }\r\n\r\n    });\r\n  }, [socket]);\r\n  console.log(chats);\r\n  const username = useSelector((state) => state.auth[0].user.name);\r\n  const allChats = useSelector((state) => state.chats.chats);\r\n  const allChatsElement = allChats?.map((chat) => {\r\n    return (\r\n      <Contactcard key={chat._id}\r\n        chatId={chat._id}\r\n        name={username===chat.users[0].name?chat.users[1].name:chat.users[0].name}\r\n        latestMessage={chat.latestMessage?.content}\r\n        time={timeSince(new Date(chat.latestMessage?.createdAt))}\r\n        avatar={username===chat.users[0].name?chat.users[1].pic:chat.users[0].pic}\r\n      />\r\n    );\r\n  });\r\n\r\n  const TopFourFriendsElement = allChats?.slice(0, 4).map((chat) => {\r\n    return (\r\n      <Photo\r\n        photoId={chat._id}\r\n        src={username === chat.users[0].name ? chat.users[1].pic:chat.users[0].pic}\r\n      />\r\n    );\r\n   });\r\n  \r\n  return (\r\n    <div className=\"contact-body\">\r\n      <div className=\"contact-content\">\r\n        <div className=\"contact-regular\">\r\n          <h1>Regular Contact</h1>\r\n          <div className=\"contact-avatar\">\r\n            {TopFourFriendsElement}\r\n          </div>\r\n        </div>\r\n        <div className=\"search\">\r\n          <div className=\"search-content\">\r\n            <i className=\"fa-solid fa-magnifying-glass\"></i>\r\n            <input type=\"search\" placeholder=\"Enter a name\"></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"contact-message\">\r\n        {allChatsElement}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}