{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport Axios from \"axios\";\nexport const getAllChatsAsync = createAsyncThunk(\"chats/getAllchatAsync\", async () => {\n  console.log(\"fetching data\");\n  const data = await Axios.get(\"http://localhost:5000/api/chat\", {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return data;\n});\nexport const getChatID = createAsyncThunk(\"chats/getChatID\", async (userID1, userID2) => {\n  const data = await Axios.get(`http://localhost:5000/api/chat`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return data;\n});\nconst ChatSlice = createSlice({\n  name: \"chats\",\n  initialState: [],\n  reducers: {},\n  extraReducers: {\n    [getAllChatsAsync.fulfilled]: (state, action) => {\n      return action.payload.data.data;\n    }\n  }\n});\nexport const {\n  getAllChats\n} = ChatSlice.actions;\nexport default ChatSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","Axios","getAllChatsAsync","console","log","data","get","headers","Authorization","localStorage","getItem","getChatID","userID1","userID2","ChatSlice","name","initialState","reducers","extraReducers","fulfilled","state","action","payload","getAllChats","actions","reducer"],"sources":["C:/Users/admin/Documents/Workspace/ReactJS/chat-app/client/src/redux/Slices/ChatSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport Axios from \"axios\";\r\nexport const getAllChatsAsync = createAsyncThunk(\r\n  \"chats/getAllchatAsync\",\r\n  async () => {\r\n    console.log(\"fetching data\");\r\n    const data = await Axios.get(\"http://localhost:5000/api/chat\", {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n    return data;\r\n  }\r\n  );\r\n  export const getChatID = createAsyncThunk(\r\n    \"chats/getChatID\",\r\n    async (userID1, userID2) => {\r\n        const data = await Axios.get(`http://localhost:5000/api/chat`,{\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n        return data;\r\n      } \r\n  );\r\n  const ChatSlice = createSlice({\r\n    name: \"chats\",\r\n  initialState: [],\r\n  reducers: {\r\n  },\r\n  extraReducers: {\r\n    [getAllChatsAsync.fulfilled]: (state, action) => {\r\n       return action.payload.data.data;\r\n    },  \r\n  },\r\n});\r\nexport const { getAllChats } = ChatSlice.actions;\r\nexport default ChatSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,gBAAgB,GAAGF,gBAAgB,CAC9C,uBAD8C,EAE9C,YAAY;EACVG,OAAO,CAACC,GAAR,CAAY,eAAZ;EACA,MAAMC,IAAI,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,gCAAV,EAA4C;IAC7DC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;IADhD;EADoD,CAA5C,CAAnB;EAKA,OAAOL,IAAP;AACD,CAV6C,CAAzC;AAYL,OAAO,MAAMM,SAAS,GAAGX,gBAAgB,CACvC,iBADuC,EAEvC,OAAOY,OAAP,EAAgBC,OAAhB,KAA4B;EACxB,MAAMR,IAAI,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,gCAAX,EAA2C;IAC1DC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;IADhD;EADiD,CAA3C,CAAnB;EAMA,OAAOL,IAAP;AACD,CAVoC,CAAlC;AAYP,MAAMS,SAAS,GAAGf,WAAW,CAAC;EAC5BgB,IAAI,EAAE,OADsB;EAE9BC,YAAY,EAAE,EAFgB;EAG9BC,QAAQ,EAAE,EAHoB;EAK9BC,aAAa,EAAE;IACb,CAAChB,gBAAgB,CAACiB,SAAlB,GAA8B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC9C,OAAOA,MAAM,CAACC,OAAP,CAAejB,IAAf,CAAoBA,IAA3B;IACF;EAHY;AALe,CAAD,CAA7B;AAWF,OAAO,MAAM;EAAEkB;AAAF,IAAkBT,SAAS,CAACU,OAAlC;AACP,eAAeV,SAAS,CAACW,OAAzB"},"metadata":{},"sourceType":"module"}