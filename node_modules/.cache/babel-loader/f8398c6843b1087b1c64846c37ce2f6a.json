{"ast":null,"code":"// import React from \"react\";\n// import { useState } from \"react\";\n// const AuthContext = React.createContext({\n//     // currentUser:{},\n//     token: null,\n//     isLoggedIn: false,\n//     login: (token) => {},\n//     logout: (currentUser) => {}\n// });\n// export const AuthContextProvider = (props) => {\n// // const [currentUser, setCurrentUser] = useState({})\n// const [token, setToken] = useState(null)\n//     const userIsLoggedIn = !!token;\n//     const loginHandler = (token ) => {\n//         // setCurrentUser(currentUser);\n//         setToken(token);\n//     }\n//     const logoutHandler = () => {\n//         setCurrentUser(null);\n//         setToken(null);\n//     }\n//     const contextValue = {\n//         token: token,\n//         isLoggedIn: userIsLoggedIn,\n//         login: loginHandler,\n//         logout: logoutHandler\n//     };\n//     return <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>\n// }\n// export default AuthContext;","map":{"version":3,"names":[],"sources":["C:/Users/admin/Documents/Workspace/ReactJS/chat-app/client/src/store/AuthContent.js"],"sourcesContent":["// import React from \"react\";\r\n// import { useState } from \"react\";\r\n\r\n\r\n// const AuthContext = React.createContext({\r\n//     // currentUser:{},\r\n//     token: null,\r\n//     isLoggedIn: false,\r\n//     login: (token) => {},\r\n//     logout: (currentUser) => {}\r\n// });\r\n// export const AuthContextProvider = (props) => {\r\n// // const [currentUser, setCurrentUser] = useState({})\r\n// const [token, setToken] = useState(null)\r\n\r\n//     const userIsLoggedIn = !!token;\r\n\r\n//     const loginHandler = (token ) => {\r\n//         // setCurrentUser(currentUser);\r\n//         setToken(token);\r\n//     }\r\n\r\n//     const logoutHandler = () => {\r\n//         setCurrentUser(null);\r\n//         setToken(null);\r\n//     }\r\n//     const contextValue = {\r\n//         token: token,\r\n//         isLoggedIn: userIsLoggedIn,\r\n//         login: loginHandler,\r\n//         logout: logoutHandler\r\n//     };\r\n//     return <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>\r\n// }\r\n// export default AuthContext;\r\n"],"mappings":"AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}