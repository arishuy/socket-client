{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport Axios from \"axios\";\nexport const getAllChatsAsync = createAsyncThunk(\"chats/getAllchatAsync\", async () => {\n  console.log(\"fetching data\");\n  console.log(localStorage.getItem(\"token\"));\n  const data = await Axios.get(\"http://localhost:5000/api/chat\", {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  return data;\n}); // export const AddNewTaskAsync = createAsyncThunk(\n//   \"tasks/AddNewTaskAsync\",\n//   async (payload) => {\n//     const response = await Axios.post(\n//       \"http://localhost:5000/api/v1/tasks\",\n//       payload\n//     );\n//     const task = response.data;\n//     return task;\n//   }\n// );\n// export const deleteTaskAsync = createAsyncThunk(\n//   \"tasks/deleteTaskAsync\",\n//   async (payload) => {\n//     const id = payload.id;\n//     const response = await Axios.delete(\n//       `http://localhost:5000/api/v1/tasks/${id}`\n//     );\n//     return payload;\n//   }\n// );\n// export const toggleIsdoneAsync = createAsyncThunk(\n//   \"tasks/toggleIsdoneAsync\",\n//   async (payload) => {\n//     const id = payload.id;\n//     const newPayload = {\n//       content: payload.content,\n//       isdone: payload.isdone,\n//     };\n//     const response = await Axios.patch(\n//       `http://localhost:5000/api/v1/tasks/${id}`,\n//       { content: payload.content, isdone: payload.isdone }\n//     );\n//     console.log(newPayload);\n//     return payload;\n//   }\n// );\n\nconst ChatSlice = createSlice({\n  name: \"chats\",\n  initialState: [],\n  reducers: {},\n  extraReducers: {\n    [getAllChatsAsync.fulfilled]: (state, action) => {\n      console.log(\"fetching data successfully\");\n      console.log(action.payload.data.data);\n      return action.payload.data.data;\n    }\n  }\n});\nexport const {\n  getAllChats\n} = ChatSlice.actions;\nexport default ChatSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","Axios","getAllChatsAsync","console","log","localStorage","getItem","data","get","headers","Authorization","ChatSlice","name","initialState","reducers","extraReducers","fulfilled","state","action","payload","getAllChats","actions","reducer"],"sources":["C:/Users/admin/Documents/Workspace/ReactJS/chat-app/client/src/redux/Slices/ChatSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport Axios from \"axios\";\r\nexport const getAllChatsAsync = createAsyncThunk(\r\n  \"chats/getAllchatAsync\",\r\n  async () => {\r\n    console.log(\"fetching data\");\r\n    console.log(localStorage.getItem(\"token\"));\r\n    const data = await Axios.get(\"http://localhost:5000/api/chat\", {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n    return data;\r\n  }\r\n);\r\n// export const AddNewTaskAsync = createAsyncThunk(\r\n//   \"tasks/AddNewTaskAsync\",\r\n//   async (payload) => {\r\n//     const response = await Axios.post(\r\n//       \"http://localhost:5000/api/v1/tasks\",\r\n//       payload\r\n//     );\r\n//     const task = response.data;\r\n//     return task;\r\n//   }\r\n// );\r\n// export const deleteTaskAsync = createAsyncThunk(\r\n//   \"tasks/deleteTaskAsync\",\r\n//   async (payload) => {\r\n//     const id = payload.id;\r\n//     const response = await Axios.delete(\r\n//       `http://localhost:5000/api/v1/tasks/${id}`\r\n//     );\r\n//     return payload;\r\n//   }\r\n// );\r\n// export const toggleIsdoneAsync = createAsyncThunk(\r\n//   \"tasks/toggleIsdoneAsync\",\r\n//   async (payload) => {\r\n//     const id = payload.id;\r\n//     const newPayload = {\r\n//       content: payload.content,\r\n//       isdone: payload.isdone,\r\n//     };\r\n//     const response = await Axios.patch(\r\n//       `http://localhost:5000/api/v1/tasks/${id}`,\r\n//       { content: payload.content, isdone: payload.isdone }\r\n//     );\r\n//     console.log(newPayload);\r\n//     return payload;\r\n//   }\r\n// );\r\n\r\nconst ChatSlice = createSlice({\r\n  name: \"chats\",\r\n  initialState: [],\r\n  reducers: {\r\n  },\r\n  extraReducers: {\r\n    [getAllChatsAsync.fulfilled]: (state, action) => {\r\n      console.log(\"fetching data successfully\");\r\n      console.log(action.payload.data.data);\r\n       return action.payload.data.data;\r\n    },  \r\n  },\r\n});\r\nexport const { getAllChats } = ChatSlice.actions;\r\nexport default ChatSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,gBAAgB,GAAGF,gBAAgB,CAC9C,uBAD8C,EAE9C,YAAY;EACVG,OAAO,CAACC,GAAR,CAAY,eAAZ;EACAD,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;EACA,MAAMC,IAAI,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,gCAAV,EAA4C;IAC7DC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;IADhD;EADoD,CAA5C,CAAnB;EAKA,OAAOC,IAAP;AACD,CAX6C,CAAzC,C,CAaP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMI,SAAS,GAAGZ,WAAW,CAAC;EAC5Ba,IAAI,EAAE,OADsB;EAE5BC,YAAY,EAAE,EAFc;EAG5BC,QAAQ,EAAE,EAHkB;EAK5BC,aAAa,EAAE;IACb,CAACb,gBAAgB,CAACc,SAAlB,GAA8B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC/Cf,OAAO,CAACC,GAAR,CAAY,4BAAZ;MACAD,OAAO,CAACC,GAAR,CAAYc,MAAM,CAACC,OAAP,CAAeZ,IAAf,CAAoBA,IAAhC;MACC,OAAOW,MAAM,CAACC,OAAP,CAAeZ,IAAf,CAAoBA,IAA3B;IACF;EALY;AALa,CAAD,CAA7B;AAaA,OAAO,MAAM;EAAEa;AAAF,IAAkBT,SAAS,CAACU,OAAlC;AACP,eAAeV,SAAS,CAACW,OAAzB"},"metadata":{},"sourceType":"module"}